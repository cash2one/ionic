<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.customer.dao.CustomerBankCardDao">
    
	<sql id="customerBankCardColumns">
		a.account_id AS "id",
		a.card_no AS "cardNo",
		a.card_status_code AS "cardStatusCode",
		a.bank_code AS "bankCode",
		a.message AS "message",
		a.request_no AS "requestNo",
		a.credit_report_file AS "creditReportFile",
		a.op_dt AS "opDt",
		a.last_modify_dt AS "lastModifyDt",
		ac.account_id AS "accountId",
		c.customer_id AS "customerId",
		ac.account_type AS "accountType",
		a.unbind_request_no AS "unbindRequestNo"
	</sql>
	
	<sql id="customerBankCardJoins">
		RIGHT JOIN customer_account ac ON ac.account_id=a.account_id
		LEFT JOIN customer_base c ON ac.account_id=c.account_id
	</sql>
    
	<select id="get" resultType="CustomerBankCard">
		SELECT 
			<include refid="customerBankCardColumns"/>
		FROM customer_bank_card a
		<include refid="customerBankCardJoins"/>
		WHERE a.account_id = #{id}
	</select>
	
	<select id="getByAccountId" resultType="CustomerBankCard">
		SELECT 
			<include refid="customerBankCardColumns"/>
		FROM customer_bank_card a
		<include refid="customerBankCardJoins"/>
		WHERE ac.account_id = #{accountId}
	</select>
	
	<select id="getByRequestNo" resultType="CustomerBankCard">
		SELECT 
			<include refid="customerBankCardColumns"/>
		FROM customer_bank_card a
		<include refid="customerBankCardJoins"/>
		WHERE a.request_no = #{0}
	</select>
	
	<select id="findList" resultType="CustomerBankCard">
		SELECT 
			<include refid="customerBankCardColumns"/>
		FROM customer_bank_card a
		<include refid="customerBankCardJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CustomerBankCard">
		SELECT 
			<include refid="customerBankCardColumns"/>
		FROM customer_bank_card a
		<include refid="customerBankCardJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO customer_bank_card(
			account_id,
			card_no,
			card_status_code,
			bank_code,
			message,
			request_no,
			op_dt,
			credit_report_file,
			last_modify_dt
		) VALUES (
			#{accountId},
			#{cardNo},
			#{cardStatusCode},
			#{bankCode},
			#{message},
			#{requestNo},
			#{opDt},
			#{creditReportFile},
			#{lastModifyDt}
		)
	</insert>
	
	<update id="update">
		UPDATE customer_bank_card SET 	
			card_no = #{cardNo},
			card_status_code = #{cardStatusCode},
			bank_code = #{bankCode},
			message = #{message},
			request_no = #{requestNo},
			op_dt = #{opDt},
			credit_report_file = #{creditReportFile},
			last_modify_dt = #{lastModifyDt},
			unbind_request_no = #{unbindRequestNo}
		WHERE account_id = #{accountId}
	</update>
	
	<update id="delete">
		DELETE FROM customer_bank_card
		WHERE id = #{id}
	</update>
	
	<select id="recordIsExistWithAccountId" resultType="boolean">
		select case count(*) when 0 then 0 else 1 end isExist from customer_bank_card where account_id = #{accountId}
	</select>
	
	<update id="updateInfoWithRequestNo">
		update customer_bank_card set 
			card_no = #{cardNo},
			card_status_code = #{cardStatusCode},
			bank_code = #{bankCode},
			message = #{message} 
		where 
			request_no = #{requestNo}
	</update>
</mapper>